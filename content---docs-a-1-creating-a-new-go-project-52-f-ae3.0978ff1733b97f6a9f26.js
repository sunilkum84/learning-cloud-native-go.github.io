(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{58:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",function(){return i}),o.d(t,"rightToc",function(){return p}),o.d(t,"default",function(){return u});o(0);var n=o(70);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i={id:"a1.creating_a_new_go_project",title:"Creating a new Go project"},p=[{value:"Creating a remote repository",id:"creating-a-remote-repository",children:[]},{value:"Creating a Go module",id:"creating-a-go-module",children:[]}],c={rightToc:p},l="wrapper";function u(e){var t=e.components,o=a(e,["components"]);return Object(n.b)(l,r({},c,o,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"creating-a-remote-repository"},"Creating a remote repository"),Object(n.b)("p",null,"It's a good practice to save the code in a remote repository. So, I am using ",Object(n.b)("a",r({parentName:"p"},{href:"https://github.com/learning-cloud-native-go/myapp"}),"github.com/learning-cloud-native-go/myapp")," to store the code."),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"ðŸ’¡ You can use ",Object(n.b)("a",r({parentName:"p"},{href:"https://github.com/"}),"GitHub"),", ",Object(n.b)("a",r({parentName:"p"},{href:"https://bitbucket.org/"}),"Bitbucket"),", ",Object(n.b)("a",r({parentName:"p"},{href:"https://gitlab.com/"}),"GitLab")," or any preferable version control repository hosting service to store the code.")),Object(n.b)("p",null,"In here, I prefer to use ",Object(n.b)("inlineCode",{parentName:"p"},"myapp")," as the project name. But you can choose a better name according to the purpose of your application."),Object(n.b)("p",null,"We are going to implement this application as a ",Object(n.b)("a",r({parentName:"p"},{href:"https://github.com/golang/go/wiki/Modules"}),"Go module"),". So, better use any folder ",Object(n.b)("strong",{parentName:"p"},"outside the ",Object(n.b)("a",r({parentName:"strong"},{href:"https://golang.org/doc/code.html#GOPATH"}),"GOPATH"))," to store the code locally. In here, I am using ",Object(n.b)("inlineCode",{parentName:"p"},"dev")," folder inside my home folder."),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-bash"}),"cd ~/dev\ngit clone git@github.com:learning-cloud-native-go/myapp.git\n")),Object(n.b)("h2",{id:"creating-a-go-module"},"Creating a Go module"),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},Object(n.b)("a",r({parentName:"p"},{href:"https://github.com/golang/go/wiki/Modules#modules"}),"ðŸ“–")," A Go module is a collection of related Go packages that are versioned together as a single unit. Most often, a version control repository contains exactly one module defined in the repository root. (",Object(n.b)("a",r({parentName:"p"},{href:"https://github.com/golang/go/wiki/Modules#faqs--multi-module-repositories"}),"Multiple modules are supported in a single repository"),", but typically that would result in more work on an on-going basis than a single module per repository).")),Object(n.b)("p",null,"Use ",Object(n.b)("inlineCode",{parentName:"p"},"go mod init")," command with the project name, inside the project folder to make it  a ",Object(n.b)("a",r({parentName:"p"},{href:"https://blog.golang.org/using-go-modules"}),"Go module"),"."),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-bash"}),"cd myapp\ngo mod init myapp\n")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"ðŸ’¡ If you want to reuse this module inside another project, better use ",Object(n.b)("inlineCode",{parentName:"p"},"go mod init")," with either ",Object(n.b)("inlineCode",{parentName:"p"},"github.com/mycompany/myapp")," or ",Object(n.b)("inlineCode",{parentName:"p"},"mycompany.com/myapp"),".")),Object(n.b)("p",null,"It creates the ",Object(n.b)("inlineCode",{parentName:"p"},"go.mod")," file with the following content,"),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-go"}),"module myapp\n\ngo 1.13\n")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"ðŸ’­ In the next steps, I assume you are inside the ",Object(n.b)("inlineCode",{parentName:"p"},"myapp")," folder while mentioning file paths and commands to run.")))}u.isMDXComponent=!0},70:function(e,t,o){"use strict";o.d(t,"a",function(){return p}),o.d(t,"b",function(){return b});var n=o(0),r=o.n(n),a=r.a.createContext({}),i=function(e){var t=r.a.useContext(a),o=t;return e&&(o="function"==typeof e?e(t):Object.assign({},t,e)),o},p=function(e){var t=i(e.components);return r.a.createElement(a.Provider,{value:t},e.children)};var c="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=function(e){var t=e.components,o=e.mdxType,n=e.originalType,a=e.parentName,p=function(e,t){var o={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(o[n]=e[n]);return o}(e,["components","mdxType","originalType","parentName"]),c=i(t),u=o,b=c[a+"."+u]||c[u]||l[u]||n;return t?r.a.createElement(b,Object.assign({},p,{components:t})):r.a.createElement(b,p)};function b(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:n,i[1]=p;for(var b=2;b<a;b++)i[b]=o[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,o)}u.displayName="MDXCreateElement"}}]);