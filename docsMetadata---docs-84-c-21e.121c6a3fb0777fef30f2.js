(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{37:function(i){i.exports=JSON.parse('{"docs":{"a1.creating_a_new_go_project":{"id":"a1.creating_a_new_go_project","title":"Creating a new Go project","description":"## Creating a remote repository","source":"@site/docs/a1.creating_a_new_go_project.md","permalink":"/docs/a1.creating_a_new_go_project","sidebar":"docs","category":"Let\'s Get It Started","next":"a2.adding_initial_http_server","previous":"a.overview","previous_title":"Building a Dockerized RESTful API application","next_title":"Adding initial HTTP server"},"a10.adding_initial_books_api_routes":{"id":"a10.adding_initial_books_api_routes","title":"Adding initial books API routes","description":"## Implementing initial books API Handlers","source":"@site/docs/a10.adding_initial_books_api_routes.md","permalink":"/docs/a10.adding_initial_books_api_routes","sidebar":"docs","category":"Let\'s Get It Started","next":"a11.implementing_restful_handlers","previous":"a9.adding_gorm","previous_title":"Adding GORM","next_title":"Implementing RESTful handlers"},"a11.implementing_restful_handlers":{"id":"a11.implementing_restful_handlers","title":"Implementing RESTful handlers","description":"Let\'s complete the functionality of each handler functions.","source":"@site/docs/a11.implementing_restful_handlers.md","permalink":"/docs/a11.implementing_restful_handlers","sidebar":"docs","category":"Let\'s Get It Started","next":"a12.adding_validator.v9","previous":"a10.adding_initial_books_api_routes","previous_title":"Adding initial books API routes","next_title":"Adding Validator.v9"},"a.overview":{"id":"a.overview","title":"Building a Dockerized RESTful API application","description":"In this section, we are going to build a RESTful API application to manage a simple bookshelf. And in here, we are discussing,","source":"@site/docs/a.overview.md","permalink":"/docs/a.overview","sidebar":"docs","category":"Let\'s Get It Started","next":"a1.creating_a_new_go_project","previous":"index","previous_title":"Overview","next_title":"Creating a new Go project"},"a12.adding_validator.v9":{"id":"a12.adding_validator.v9","title":"Adding Validator.v9","description":">💭 Form validation is an important step while inserting and updating data. In the Go ecosystem we can see few validation packages like [`go-playground/validator.v9`](https://gopkg.in/go-playground/validator.v9), [`go-ozzo/ozzo-validation`](https://github.com/go-ozzo/ozzo-validation). In here, we are using [`playground/validator.v9`](https://gopkg.in/go-playground/validator.v9) due to its simplicity of usage.","source":"@site/docs/a12.adding_validator.v9.md","permalink":"/docs/a12.adding_validator.v9","sidebar":"docs","category":"Let\'s Get It Started","previous":"a11.implementing_restful_handlers","previous_title":"Implementing RESTful handlers"},"a6.adding_zerolog_logger":{"id":"a6.adding_zerolog_logger","title":"Adding Zerolog logger","description":"> ⭐ While using microservices architectures, multiple services might be invoked to handle a single client request. The **[`Syslog`](https://en.wikipedia.org/wiki/Syslog)** is a [message logging protocol](https://en.wikipedia.org/wiki/Log_file) which can be used to send all log events in different systems to a centralized log storage like [`Graylog`](https://www.graylog.org/), [`Stackdriver`](https://cloud.google.com/logging/), [`ELK Stack`](https://www.elastic.co/what-is/elk-stack), to provide visibility into the behavior of microservices. There are many powerful logging libraries which support [Syslog](https://en.wikipedia.org/wiki/Syslog) standards in Go like [`uber-go/zap`](https://github.com/uber-go/zap), [`apex/log`](https://github.com/apex/log), [`sirupsen/logrus`](https://github.com/Sirupsen/logrus), [`rs/zerolog`](https://github.com/rs/zerolog). In here, we are using **[`rs/zerolog`](https://github.com/rs/zerolog)** due to its speed and lesser allocations.","source":"@site/docs/a6.adding_zerolog_logger.md","permalink":"/docs/a6.adding_zerolog_logger","sidebar":"docs","category":"Let\'s Get It Started","next":"a7.adding_db_docker_file","previous":"a5.adding_chi_router","previous_title":"Adding Chi router","next_title":"Adding DB docker file"},"a2.adding_initial_http_server":{"id":"a2.adding_initial_http_server","title":"Adding initial HTTP server","description":">💡 If you are a newcomer to Go, I recommend you to read the overview of the documentation of the **[`net/http`](https://golang.org/pkg/net/http/)** package, the descriptions of **[`ServeMux`](https://golang.org/pkg/net/http/#ServeMux)** type and **[`HandleFunc`](https://golang.org/pkg/net/http/#HandleFunc)** & **[`ListenAndServe`](https://golang.org/pkg/net/http/#ListenAndServe)** functions, before continuing this.","source":"@site/docs/a2.adding_initial_http_server.md","permalink":"/docs/a2.adding_initial_http_server","sidebar":"docs","category":"Let\'s Get It Started","next":"a3.adding_initial_docker_files","previous":"a1.creating_a_new_go_project","previous_title":"Creating a new Go project","next_title":"Adding initial docker files"},"a4.adding_initial_configurations":{"id":"a4.adding_initial_configurations","title":"Adding initial configurations","description":"If you remember the [code of initial HTTP server](a2.adding_initial_http_server.md), we have hard-coded the server port and timeout values with the code. Things like them should be configurable. So better extract them to a `config` package and use those config parameters in the code.","source":"@site/docs/a4.adding_initial_configurations.md","permalink":"/docs/a4.adding_initial_configurations","sidebar":"docs","category":"Let\'s Get It Started","next":"a5.adding_chi_router","previous":"a3.adding_initial_docker_files","previous_title":"Adding initial docker files","next_title":"Adding Chi router"},"a5.adding_chi_router":{"id":"a5.adding_chi_router","title":"Adding Chi router","description":">💭 The [default HTTP request multiplexer](https://golang.org/pkg/net/http/#ServeMux) in [`net/http`](https://golang.org/pkg/net/http/) is not very powerful. For example, if you visit `localhost:8080/invalid-path` it gives the same `Hello World!` response with `200` HTTP status instead giving `404` HTTP status. There are many powerful router libraries in Go like [`gorilla/mux`](https://github.com/gorilla/mux), [`go-chi/chi`](https://github.com/go-chi/chi), [`julienschmidt/httprouter`](https://github.com/julienschmidt/httprouter), [`buaazp/fasthttprouter`](https://github.com/buaazp/fasthttprouter). In here, we are using [**`go-chi/chi`**](https://github.com/go-chi/chi) due to its lesser weight and extensibility.","source":"@site/docs/a5.adding_chi_router.md","permalink":"/docs/a5.adding_chi_router","sidebar":"docs","category":"Let\'s Get It Started","next":"a6.adding_zerolog_logger","previous":"a4.adding_initial_configurations","previous_title":"Adding initial configurations","next_title":"Adding Zerolog logger"},"a7.adding_db_docker_file":{"id":"a7.adding_db_docker_file","title":"Adding DB docker file","description":"- As I informed earlier, we use the `docker` folder in the project root to store all Docker related files. So, Let’s save this under `docker/mariadb/Dockerfile`.","source":"@site/docs/a7.adding_db_docker_file.md","permalink":"/docs/a7.adding_db_docker_file","sidebar":"docs","category":"Let\'s Get It Started","next":"a8.adding_initial_database_migrations","previous":"a6.adding_zerolog_logger","previous_title":"Adding Zerolog logger","next_title":"Adding initial database migrations"},"a8.adding_initial_database_migrations":{"id":"a8.adding_initial_database_migrations","title":"Adding initial database migrations","description":">💭 Database migrations are like version controls for the database. There are few popular options for database migration in the Go ecosystem like [`golang-migrate/migrate`](https://github.com/golang-migrate/migrate), [`pressly/goose`](https://github.com/pressly/goose), [GORM migrations](http://gorm.io/docs/migration.html) and etc. In here, we are using [`pressly/goose`](https://github.com/pressly/goose), due to its lesser resource usage and the simplicity of usage.","source":"@site/docs/a8.adding_initial_database_migrations.md","permalink":"/docs/a8.adding_initial_database_migrations","sidebar":"docs","category":"Let\'s Get It Started","next":"a9.adding_gorm","previous":"a7.adding_db_docker_file","previous_title":"Adding DB docker file","next_title":"Adding GORM"},"a9.adding_gorm":{"id":"a9.adding_gorm","title":"Adding GORM","description":">💭 [GORM](http://gorm.io/) is a full featured [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping) for Golang. It supports database associations, preloading associated models, database transactions and many more. If you are not familiar with GORM, I highly recommend you to check [its documentation](http://gorm.io/docs/) before starting this section.","source":"@site/docs/a9.adding_gorm.md","permalink":"/docs/a9.adding_gorm","sidebar":"docs","category":"Let\'s Get It Started","next":"a10.adding_initial_books_api_routes","previous":"a8.adding_initial_database_migrations","previous_title":"Adding initial database migrations","next_title":"Adding initial books API routes"},"a3.adding_initial_docker_files":{"id":"a3.adding_initial_docker_files","title":"Adding initial docker files","description":"[📖](https://docs.docker.com/get-started/#docker-concepts) [Docker](https://www.docker.com/) is **a platform** for developers and sysadmins **to develop, deploy, and run applications** with **containers**.","source":"@site/docs/a3.adding_initial_docker_files.md","permalink":"/docs/a3.adding_initial_docker_files","sidebar":"docs","category":"Let\'s Get It Started","next":"a4.adding_initial_configurations","previous":"a2.adding_initial_http_server","previous_title":"Adding initial HTTP server","next_title":"Adding initial configurations"},"index":{"id":"index","title":"Overview","description":"Cloud Native Application Development is a one way of speeding up building web applications, using micro-services, containers and orchestration tools. First, let’s see what is a cloud and what cloud native means.","source":"@site/docs/index.md","permalink":"/docs/index","sidebar":"docs","category":"Documentation","next":"a.overview","next_title":"Building a Dockerized RESTful API application"}},"docsDir":"/Users/dumindu/dev/learning-cloud-native-go/website/docs","docsSidebars":{"docs":[{"type":"category","label":"Documentation","items":[{"type":"doc","id":"index"}]},{"type":"category","label":"Let\'s Get It Started","items":[{"type":"doc","id":"a.overview"},{"type":"doc","id":"a1.creating_a_new_go_project"},{"type":"doc","id":"a2.adding_initial_http_server"},{"type":"doc","id":"a3.adding_initial_docker_files"},{"type":"doc","id":"a4.adding_initial_configurations"},{"type":"doc","id":"a5.adding_chi_router"},{"type":"doc","id":"a6.adding_zerolog_logger"},{"type":"doc","id":"a7.adding_db_docker_file"},{"type":"doc","id":"a8.adding_initial_database_migrations"},{"type":"doc","id":"a9.adding_gorm"},{"type":"doc","id":"a10.adding_initial_books_api_routes"},{"type":"doc","id":"a11.implementing_restful_handlers"},{"type":"doc","id":"a12.adding_validator.v9"}]}]},"sourceToPermalink":{"@site/docs/a1.creating_a_new_go_project.md":"/docs/a1.creating_a_new_go_project","@site/docs/a10.adding_initial_books_api_routes.md":"/docs/a10.adding_initial_books_api_routes","@site/docs/a11.implementing_restful_handlers.md":"/docs/a11.implementing_restful_handlers","@site/docs/a.overview.md":"/docs/a.overview","@site/docs/a12.adding_validator.v9.md":"/docs/a12.adding_validator.v9","@site/docs/a6.adding_zerolog_logger.md":"/docs/a6.adding_zerolog_logger","@site/docs/a2.adding_initial_http_server.md":"/docs/a2.adding_initial_http_server","@site/docs/a4.adding_initial_configurations.md":"/docs/a4.adding_initial_configurations","@site/docs/a5.adding_chi_router.md":"/docs/a5.adding_chi_router","@site/docs/a7.adding_db_docker_file.md":"/docs/a7.adding_db_docker_file","@site/docs/a8.adding_initial_database_migrations.md":"/docs/a8.adding_initial_database_migrations","@site/docs/a9.adding_gorm.md":"/docs/a9.adding_gorm","@site/docs/a3.adding_initial_docker_files.md":"/docs/a3.adding_initial_docker_files","@site/docs/index.md":"/docs/index"},"permalinkToId":{"/docs/a1.creating_a_new_go_project":"a1.creating_a_new_go_project","/docs/a10.adding_initial_books_api_routes":"a10.adding_initial_books_api_routes","/docs/a11.implementing_restful_handlers":"a11.implementing_restful_handlers","/docs/a.overview":"a.overview","/docs/a12.adding_validator.v9":"a12.adding_validator.v9","/docs/a6.adding_zerolog_logger":"a6.adding_zerolog_logger","/docs/a2.adding_initial_http_server":"a2.adding_initial_http_server","/docs/a4.adding_initial_configurations":"a4.adding_initial_configurations","/docs/a5.adding_chi_router":"a5.adding_chi_router","/docs/a7.adding_db_docker_file":"a7.adding_db_docker_file","/docs/a8.adding_initial_database_migrations":"a8.adding_initial_database_migrations","/docs/a9.adding_gorm":"a9.adding_gorm","/docs/a3.adding_initial_docker_files":"a3.adding_initial_docker_files","/docs/index":"index"}}')}}]);