(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{67:function(t){t.exports=JSON.parse('{"id":"a5.adding_chi_router","title":"Adding Chi router","description":">ðŸ’­ The [default HTTP request multiplexer](https://golang.org/pkg/net/http/#ServeMux) in [`net/http`](https://golang.org/pkg/net/http/) is not very powerful. For example, if you visit `localhost:8080/invalid-path` it gives the same `Hello World!` response with `200` HTTP status instead giving `404` HTTP status. There are many powerful router libraries in Go like [`gorilla/mux`](https://github.com/gorilla/mux), [`go-chi/chi`](https://github.com/go-chi/chi), [`julienschmidt/httprouter`](https://github.com/julienschmidt/httprouter), [`buaazp/fasthttprouter`](https://github.com/buaazp/fasthttprouter). In here, we are using [**`go-chi/chi`**](https://github.com/go-chi/chi) due to its lesser weight and extensibility.","source":"@site/docs/a5.adding_chi_router.md","permalink":"/docs/a5.adding_chi_router","sidebar":"docs","category":"Let\'s Get It Started","next":"a6.adding_zerolog_logger","previous":"a4.adding_initial_configurations","previous_title":"Adding initial configurations","next_title":"Adding Zerolog logger"}')}}]);