(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{53:function(e){e.exports=JSON.parse('{"id":"a6.adding_zerolog_logger","title":"Adding Zerolog logger","description":"> ‚≠ê While using microservices architectures, multiple services might be invoked to handle a single client request. The **[`Syslog`](https://en.wikipedia.org/wiki/Syslog)** is a [message logging protocol](https://en.wikipedia.org/wiki/Log_file) which can be used to send all log events in different systems to a centralized log storage like [`Graylog`](https://www.graylog.org/), [`Stackdriver`](https://cloud.google.com/logging/), [`ELK Stack`](https://www.elastic.co/what-is/elk-stack), to provide visibility into the behavior of microservices. There are many powerful logging libraries which support [Syslog](https://en.wikipedia.org/wiki/Syslog) standards in Go like [`uber-go/zap`](https://github.com/uber-go/zap), [`apex/log`](https://github.com/apex/log), [`sirupsen/logrus`](https://github.com/Sirupsen/logrus), [`rs/zerolog`](https://github.com/rs/zerolog). In here, we are using **[`rs/zerolog`](https://github.com/rs/zerolog)** due to its speed and lesser allocations.","source":"@site/docs/a6.adding_zerolog_logger.md","permalink":"/docs/a6.adding_zerolog_logger","sidebar":"docs","category":"Let\'s Get It Started","next":"a7.adding_db_docker_file","previous":"a5.adding_chi_router","previous_title":"Adding Chi router","next_title":"Adding DB docker file"}')}}]);